Grading at 11/26/2020:01:48:13.198990
For commit ID 04f326651c3aa162502209efb3413e8cf550121f
Grading at Thu Nov 26 09:48:09 CST 2020
compiling
g++ -ggdb3 -Wall -Werror -pedantic -o testFreq testFreq.cpp readFreq.cpp
Make succeed, testFreq created
Testcase 1
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==91427== Memcheck, a memory error detector
==91427== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==91427== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==91427== Command: ./testFreq /etc/issue
==91427== Parent PID: 91426
==91427== 
==91427== Conditional jump or move depends on uninitialised value(s)
==91427==    at 0x10913E: main (testFreq.cpp:13)
==91427== 
==91427== Use of uninitialised value of size 8
==91427==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91427==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91427==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91427==    by 0x109186: main (testFreq.cpp:17)
==91427== 
==91427== Conditional jump or move depends on uninitialised value(s)
==91427==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91427==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91427==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91427==    by 0x109186: main (testFreq.cpp:17)
==91427== 
==91427== 
==91427== HEAP SUMMARY:
==91427==     in use at exit: 0 bytes in 0 blocks
==91427==   total heap usage: 5 allocs, 5 frees, 87,600 bytes allocated
==91427== 
==91427== All heap blocks were freed -- no leaks are possible
==91427== 
==91427== For counts of detected and suppressed errors, rerun with: -v
==91427== Use --track-origins=yes to see where uninitialised values come from
==91427== ERROR SUMMARY: 292 errors from 3 contexts (suppressed: 0 from 0)
Testcase 2
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==91431== Memcheck, a memory error detector
==91431== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==91431== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==91431== Command: ./testFreq /etc/services
==91431== Parent PID: 91430
==91431== 
==91431== Conditional jump or move depends on uninitialised value(s)
==91431==    at 0x10913E: main (testFreq.cpp:13)
==91431== 
==91431== Use of uninitialised value of size 8
==91431==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91431==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91431==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91431==    by 0x109186: main (testFreq.cpp:17)
==91431== 
==91431== Conditional jump or move depends on uninitialised value(s)
==91431==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91431==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91431==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91431==    by 0x109186: main (testFreq.cpp:17)
==91431== 
==91431== 
==91431== HEAP SUMMARY:
==91431==     in use at exit: 0 bytes in 0 blocks
==91431==   total heap usage: 5 allocs, 5 frees, 87,600 bytes allocated
==91431== 
==91431== All heap blocks were freed -- no leaks are possible
==91431== 
==91431== For counts of detected and suppressed errors, rerun with: -v
==91431== Use --track-origins=yes to see where uninitialised values come from
==91431== ERROR SUMMARY: 652 errors from 3 contexts (suppressed: 0 from 0)
Testcase 3
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==91436== Memcheck, a memory error detector
==91436== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==91436== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==91436== Command: ./testFreq /usr/share/dict/words
==91436== Parent PID: 91435
==91436== 
==91436== Conditional jump or move depends on uninitialised value(s)
==91436==    at 0x10913E: main (testFreq.cpp:13)
==91436== 
==91436== Use of uninitialised value of size 8
==91436==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91436==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91436==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91436==    by 0x109186: main (testFreq.cpp:17)
==91436== 
==91436== Conditional jump or move depends on uninitialised value(s)
==91436==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91436==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91436==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91436==    by 0x109186: main (testFreq.cpp:17)
==91436== 
==91436== 
==91436== HEAP SUMMARY:
==91436==     in use at exit: 0 bytes in 0 blocks
==91436==   total heap usage: 5 allocs, 5 frees, 87,600 bytes allocated
==91436== 
==91436== All heap blocks were freed -- no leaks are possible
==91436== 
==91436== For counts of detected and suppressed errors, rerun with: -v
==91436== Use --track-origins=yes to see where uninitialised values come from
==91436== ERROR SUMMARY: 708 errors from 3 contexts (suppressed: 0 from 0)
Testcase 4
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==91467== Memcheck, a memory error detector
==91467== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==91467== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==91467== Command: ./testFreq /usr/share/dict/cracklib-small
==91467== Parent PID: 91466
==91467== 
==91467== Conditional jump or move depends on uninitialised value(s)
==91467==    at 0x10913E: main (testFreq.cpp:13)
==91467== 
==91467== Use of uninitialised value of size 8
==91467==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91467==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91467==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91467==    by 0x109186: main (testFreq.cpp:17)
==91467== 
==91467== Conditional jump or move depends on uninitialised value(s)
==91467==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91467==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91467==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==91467==    by 0x109186: main (testFreq.cpp:17)
==91467== 
==91467== 
==91467== HEAP SUMMARY:
==91467==     in use at exit: 0 bytes in 0 blocks
==91467==   total heap usage: 5 allocs, 5 frees, 87,600 bytes allocated
==91467== 
==91467== All heap blocks were freed -- no leaks are possible
==91467== 
==91467== For counts of detected and suppressed errors, rerun with: -v
==91467== Use --track-origins=yes to see where uninitialised values come from
==91467== ERROR SUMMARY: 532 errors from 3 contexts (suppressed: 0 from 0)

Overall Grade: F
